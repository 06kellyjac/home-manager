#!@bash@/bin/bash

function doRebuild() {
    if [[ -z "$1" ]] ; then
        echo "Need to provide path to configuration file."
        exit 1
    fi

    local confFile
    confFile="$(realpath "$1")"

    local wrkdir
    wrkdir="$(mktemp -d)"

    nix-build --show-trace \
        "@HOME_MANAGER_EXPR_PATH@" \
        --argstr modulesPath "$HOME/.nixpkgs/home-manager/modules" \
        --argstr confPath "$confFile" \
        -A activation-script \
        -o "$wrkdir/generation"

    "$wrkdir/generation/activate"

    rm -r "$wrkdir"
}

function doListGens() {
    pushd "/nix/var/nix/profiles/per-user/$USER" > /dev/null
    ls --color=yes -gG --sort time home-manager-*-link \
        | cut -d' ' -f 4-
    popd > /dev/null
}

function doListPackages() {
    local outPath
    outPath="$(nix-env -q --out-path | grep -o '/.*home-manager-path$')"
    if [[ -n "$outPath" ]] ; then
        nix-store -q --references "$outPath" | sed 's/[^-]*-//'
    else
        echo "No home-manager packages seem to be installed."
    fi
}

function doHelp() {
    echo "Usage: $0 {help | rebuild CONF | generations | packages}"
    echo
    echo "Commands"
    echo "  help        Print this help"
    echo "  rebuild     Rebuild the current environment"
    echo "  generations List all home environment generations"
    echo "  packages    List all packages installed in home-manager-path"
}

case "$1" in
    rebuild)
        doRebuild "$2"
        ;;
    generations)
        doListGens
        ;;
    packages)
        doListPackages
        ;;
    help|--help)
        doHelp
        ;;
    *)
        echo "Unknown command: $1"
        doHelp
        exit 1
        ;;
esac
